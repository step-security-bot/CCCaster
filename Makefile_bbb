# Library sources
HOOK_CC_SRCS = $(wildcard 3rdparty/minhook/src/*.cc 3rdparty/d3dhook/*.cc)
HOOK_C_SRCS = $(wildcard 3rdparty/minhook/src/hde32/*.c)
CONTRIB_CC_SRCS = 3rdparty/gtest/fused-src/gtest/gtest-all.cc $(wildcard 3rdparty/JLib/*.cc)
CONTRIB_CPP_SRCS = $(wildcard 3rdparty/imgui/*.cpp)
CONTRIB_C_SRCS = $(wildcard 3rdparty/*.c)

# Main program sources
LIB_CPP_SRCS = $(wildcard lib/*.cpp)
MAIN_CPP_SRCS = $(wildcard targets/Main*.cpp tests/*.cpp) $(wildcard netplay/*.cpp) $(LIB_CPP_SRCS)
DLL_CPP_SRCS = $(wildcard targets/Dll*.cpp) $(filter-out lib/ConsoleUi.cpp,$(wildcard netplay/*.cpp) $(LIB_CPP_SRCS))

# Build flags
DEFINES = -DWIN32_LEAN_AND_MEAN -DWINVER=0x501 -D_WIN32_WINNT=0x501 -D_M_IX86
DEFINES += -DNAMED_PIPE='"\\\\.\\pipe\\cccaster_pipe"' -DNAMED_PIPE2='"\\\\.\\pipe\\cccaster2_pipe"' -DPALETTES_FOLDER='"palettes\\"' -DREADME='"README.md"'
DEFINES += -DMBAA_EXE='"MBAA.exe"' -DBINARY='"cccaster.v3.1.release.exe"' -DFOLDER='"cccaster\\"' -DCHANGELOG='"ChangeLog.txt"'
DEFINES += -DHOOK_DLL='"cccaster\\hook.release.dll"' -DLAUNCHER='"cccaster\\launcher.exe"' -DUPDATER='"updater.exe"'
DEFINES += -DRELAY_LIST='"relay_list.txt"' -DTAG='"release"'
DEFINES += -DLOBBY_LIST='"lobby_list.txt"'
INCLUDES = -I$(CURDIR) -I$(CURDIR)/netplay -I$(CURDIR)/lib -I$(CURDIR)/tests -I$(CURDIR)/3rdparty
INCLUDES += -I$(CURDIR)/3rdparty/cereal/include -I$(CURDIR)/3rdparty/gtest/include -I$(CURDIR)/3rdparty/minhook/include
INCLUDES += -I$(CURDIR)/3rdparty/d3dhook -I$(CURDIR)/3rdparty/framedisplay -I$(CURDIR)/3rdparty/imgui

all:
	@echo
	@echo ========== Main-build ==========
	@echo
	@$(MAKE) --no-print-directory target-release BUILD_TYPE=build_release
	@scripts/make_version 3.1.002 > lib/Version.local.hpp
	@scripts/make_protocol $(filter-out lib/Version.%.hpp lib/Protocol.%.hpp,$(wildcard netplay/*.hpp targets/*.hpp lib/*.hpp tests/*.hpp))

target-release: cccaster.v3.1.release.exe cccaster/hook.release.dll cccaster/launcher.exe
	@echo
	rm -f $(wildcard cccaster*.zip)
	zip cccaster.v3.1.002.release.zip $^
	zip cccaster.v3.1.002.release.zip -j relay_list.txt
	cp -r res/GRP GRP
	zip cccaster.v3.1.002.release.zip -r GRP
	rm -rf GRP
	@echo $(MAKECMDGOALS)

build_release_$(shell git rev-parse --abbrev-ref HEAD):
	rsync -a -f"- .git/" -f"- build_*/" -f"+ */" -f"- *" --exclude=".*" . $@

build_release_$(shell git rev-parse --abbrev-ref HEAD)/%.o: %.cpp | build_release_$(shell git rev-parse --abbrev-ref HEAD)
	i686-w64-mingw32-g++ -m32 $(INCLUDES) $(DEFINES) -s -Os -Ofast -fno-rtti -DNDEBUG -DRELEASE -DDISABLE_LOGGING -DDISABLE_ASSERTS -std=c++11 -o $@ -c $<

build_release_$(shell git rev-parse --abbrev-ref HEAD)/%.o: %.cc | build_release_$(shell git rev-parse --abbrev-ref HEAD)
	i686-w64-mingw32-g++ -m32 $(INCLUDES) $(DEFINES) -s -Os -Ofast -fno-rtti -DNDEBUG -DRELEASE -DDISABLE_LOGGING -DDISABLE_ASSERTS -o $@ -c $<

build_release_$(shell git rev-parse --abbrev-ref HEAD)/%.o: %.c | build_release_$(shell git rev-parse --abbrev-ref HEAD)
	i686-w64-mingw32-gcc $(filter-out -fno-rtti,-m32 $(INCLUDES) $(DEFINES) -s -Os -Ofast -fno-rtti -DNDEBUG -DRELEASE -DDISABLE_LOGGING -DDISABLE_ASSERTS) -Wno-attributes -o $@ -c $<

cccaster.v3.1.release.exe: $(addprefix build_release_$(shell git rev-parse --abbrev-ref HEAD)/,$(MAIN_CPP_SRCS:.cpp=.o) $(CONTRIB_CC_SRCS:.cc=.o) $(CONTRIB_CPP_SRCS:.cpp=.o) $(CONTRIB_C_SRCS:.c=.o)) res/icon.res
	rm -f $(filter-out cccaster.v3.1.release.exe,$(wildcard cccaster*.exe))
	i686-w64-mingw32-g++ -o $@ -m32 $(INCLUDES) $(DEFINES) -Wall -std=c++11 $^ -m32 -static -lws2_32 -lpsapi -lwinpthread -lwinmm -lole32 -ldinput -lwininet -ldwmapi -lgdi32
	@echo
	i686-w64-mingw32-strip $@
	chmod +x $@
	@echo

cccaster/hook.release.dll: $(addprefix build_release_$(shell git rev-parse --abbrev-ref HEAD)/,$(DLL_CPP_SRCS:.cpp=.o) $(HOOK_CC_SRCS:.cc=.o) $(HOOK_C_SRCS:.c=.o) $(CONTRIB_C_SRCS:.c=.o) $(CONTRIB_CPP_SRCS:.cpp=.o)) res/rollback.o targets/CallDraw.s | cccaster
	i686-w64-mingw32-g++ -o $@ -m32 $(INCLUDES) $(DEFINES) -Wall -std=c++11 $^ -shared -m32 -static -lws2_32 -lpsapi -lwinpthread -lwinmm -lole32 -ldinput -lwininet -ldwmapi -lgdi32 -ld3dx9
	@echo
	i686-w64-mingw32-strip $@
	@echo

cccaster/launcher.exe: tools/Launcher.cpp | cccaster
	i686-w64-mingw32-g++ -o $@ $^ -m32 -s -Os -O2 -Wall -static -mwindows
	@echo
	i686-w64-mingw32-strip $@
	chmod +x $@
	@echo

cccaster:
	mkdir -p $@

res/rollback.bin: tools/generator.exe
	wine tools/generator.exe $@
	@echo

res/rollback.o: res/rollback.bin
	objcopy -I binary -O elf32-i386 -B i386 $< $@
	@echo

res/icon.res: res/icon.rc res/icon.ico
	i686-w64-mingw32-windres -F pe-i386 res/icon.rc -O coff -o $@
	@echo

tools/generator.exe: tools/Generator.cpp $(addprefix build_release_$(shell git rev-parse --abbrev-ref HEAD)/,$(filter-out lib/Version.o lib/LoggerLogVersion.o lib/ConsoleUi.o,$(LIB_CPP_SRCS:.cpp=.o) $(CONTRIB_C_SRCS:.c=.o)))
	i686-w64-mingw32-g++ -o $@ -m32 $(INCLUDES) $(DEFINES) -s -Os -O2 -DLOGGING -Wall -std=c++11 $^ -m32 -static -lws2_32 -lpsapi -lwinpthread -lwinmm -lole32 -ldinput -lwininet -ldwmapi -lgdi32
	@echo
	i686-w64-mingw32-strip $@
	chmod +x $@
	@echo

# PALETTES_SRC = tools/Palettes.cpp tools/PaletteEditor.cpp netplay/PaletteManager.cpp netplay/CharacterSelect.cpp
# PALETTES_SRC += lib/StringUtils.cpp lib/KeyValueStore.cpp

# FRAMEDISPLAY_SRC = $(wildcard 3rdparty/framedisplay/*.cc)
# FRAMEDISPLAY_OBJECTS = $(FRAMEDISPLAY_SRC:.cc=.o)

# FRAMEDISPLAY_INCLUDES = -I$(CURDIR) -I$(CURDIR)/netplay -I$(CURDIR)/lib -I$(CURDIR)/3rdparty/framedisplay
# FRAMEDISPLAY_INCLUDES += -I$(CURDIR)/3rdparty/libpng -I$(CURDIR)/3rdparty/libz -I$(CURDIR)/3rdparty/glfw
# FRAMEDISPLAY_INCLUDES += -I"$(CURDIR)/3rdparty/AntTweakBar/include" -I/usr/i686-w64-mingw32/include/GL

# FRAMEDISPLAY_CC_FLAGS = -s -Os -Ofast -fno-rtti
# FRAMEDISPLAY_CC_FLAGS += -DDISABLE_LOGGING -DDISABLE_SERIALIZATION -DPALETTES_FOLDER='"palettes\\"'

# FRAMEDISPLAY_LD_FLAGS = -L$(CURDIR)/3rdparty/libpng -L$(CURDIR)/3rdparty/libz -L"$(CURDIR)/3rdparty/AntTweakBar/lib"
# FRAMEDISPLAY_LD_FLAGS += -L$(CURDIR)/3rdparty/glfw
# FRAMEDISPLAY_LD_FLAGS += -mwindows -static -lmingw32 -lpng -lz -lglfw -lopengl32 -lglu32

# 3rdparty/framedisplay/%.o: 3rdparty/framedisplay/%.cc
# 	i686-w64-mingw32-g++ $(FRAMEDISPLAY_CC_FLAGS) $(FRAMEDISPLAY_INCLUDES) -o $@ -c $<

# 3rdparty/AntTweakBar/lib/libAntTweakBar.a: $(wildcard 3rdparty/AntTweakBar/src/*.c* 3rdparty/AntTweakBar/src/*.h)
# 	$(MAKE) --directory=3rdparty/AntTweakBar/src

# res/palettes.res: res/palettes.rc res/palettes.ico
# 	i686-w64-mingw32-windres -F pe-i386 res/palettes.rc -O coff -o $@
# 	@echo

.depend_$(shell git rev-parse --abbrev-ref HEAD): $(wildcard netplay/*.cpp tools/*.cpp targets/*.cpp lib/*.cpp tests/*.cpp) $(filter-out lib/Version.%.hpp lib/Protocol.%.hpp,$(wildcard netplay/*.hpp targets/*.hpp lib/*.hpp tests/*.hpp))
	@scripts/make_version 3.1.002 > lib/Version.local.hpp
	@scripts/make_protocol $(filter-out lib/Version.%.hpp lib/Protocol.%.hpp,$(wildcard netplay/*.hpp targets/*.hpp lib/*.hpp tests/*.hpp))
	@scripts/make_depend "i686-w64-mingw32-g++" "-m32 $(INCLUDES)"

ifeq (,$(findstring clean,$(MAKECMDGOALS)))
-include .depend_$(shell git rev-parse --abbrev-ref HEAD)
endif

clean:
	rm -rf build_release_$(shell git rev-parse --abbrev-ref HEAD)
	rm -rf tmp*
	rm -rf cccaster/trials
	rm -f .depend_$(shell git rev-parse --abbrev-ref HEAD) .include_$(shell git rev-parse --abbrev-ref HEAD) *.exe *.zip tools/*.exe \
$(filter-out cccaster/debugconfig.ini $(wildcard cccaster/*.mappings cccaster/*.log),$(wildcard cccaster/*))
	git checkout -- lib/ProtocolEnums.hpp
	rm -f $(wildcard lib/Version.*.hpp lib/Protocol.*.hpp)
	rm -f res/rollback.* res/icon.res
	rm -rf GRP
	$(MAKE) --directory=3rdparty/AntTweakBar/src clean
	rm -f 3rdparty/framedisplay/*.o

# clean-all:
# 	rm -rf .include* .depend* build*