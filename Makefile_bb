# Library sources
IMGUI_CPP_SRCS = $(wildcard 3rdparty/imgui/*.cpp)
JLIB_CC_SRCS = $(wildcard 3rdparty/JLib/*.cc)
HOOK_CC_SRCS = $(wildcard 3rdparty/minhook/src/*.cc 3rdparty/d3dhook/*.cc)
HOOK_C_SRCS = $(wildcard 3rdparty/minhook/src/hde32/*.c)
CONTRIB_CC_SRCS = 3rdparty/gtest/fused-src/gtest/gtest-all.cc $(JLIB_CC_SRCS)
CONTRIB_CPP_SRCS = $(IMGUI_CPP_SRCS)
CONTRIB_C_SRCS = $(wildcard 3rdparty/*.c)

# Main program sources
LIB_CPP_SRCS = $(wildcard lib/*.cpp)
BASE_CPP_SRCS = $(wildcard netplay/*.cpp) $(LIB_CPP_SRCS) $(wildcard sequences/*.cpp)
MAIN_CPP_SRCS = $(wildcard targets/Main*.cpp tests/*.cpp) $(BASE_CPP_SRCS)
DLL_CPP_SRCS = $(wildcard targets/Dll*.cpp) $(filter-out lib/ConsoleUi.cpp,$(BASE_CPP_SRCS))

NON_GEN_SRCS = \
	$(wildcard netplay/*.cpp tools/*.cpp targets/*.cpp lib/*.cpp tests/*.cpp sequences/*.cpp)
NON_GEN_HEADERS = \
	$(filter-out lib/Version.%.hpp lib/Protocol.%.hpp,$(wildcard netplay/*.hpp targets/*.hpp lib/*.hpp tests/*.hpp sequences/*.hpp))
AUTOGEN_HEADERS = $(wildcard lib/Version.*.hpp lib/Protocol.*.hpp)

# Main program objects
LIB_OBJECTS = $(LIB_CPP_SRCS:.cpp=.o) $(CONTRIB_C_SRCS:.c=.o)
MAIN_OBJECTS = $(MAIN_CPP_SRCS:.cpp=.o) $(CONTRIB_CC_SRCS:.cc=.o) $(CONTRIB_CPP_SRCS:.cpp=.o) $(CONTRIB_C_SRCS:.c=.o)
DLL_OBJECTS = $(DLL_CPP_SRCS:.cpp=.o) $(HOOK_CC_SRCS:.cc=.o) $(HOOK_C_SRCS:.c=.o) $(CONTRIB_C_SRCS:.c=.o) $(CONTRIB_CPP_SRCS:.cpp=.o)

TOUCH = i686-w64-mingw32-strip

# Build flags
DEFINES = -DWIN32_LEAN_AND_MEAN -DWINVER=0x501 -D_WIN32_WINNT=0x501 -D_M_IX86
DEFINES += -DNAMED_PIPE='"\\\\.\\pipe\\cccaster_pipe"' -DNAMED_PIPE2='"\\\\.\\pipe\\cccaster2_pipe"' -DPALETTES_FOLDER='"palettes\\"' -DREADME='"README.md"'
DEFINES += -DMBAA_EXE='"MBAA.exe"' -DBINARY='"cccaster.v3.1.debug.exe"' -DFOLDER='"cccaster\\"' -DCHANGELOG='"ChangeLog.txt"'
DEFINES += -DHOOK_DLL='"cccaster\\hook.debug.dll"' -DLAUNCHER='"cccaster\\launcher.exe"' -DUPDATER='"updater.exe"'
DEFINES += -DRELAY_LIST='"relay_list.txt"' -DTAG='"debug"'
DEFINES += -DLOBBY_LIST='"lobby_list.txt"'
INCLUDES = -I$(CURDIR) -I$(CURDIR)/netplay -I$(CURDIR)/lib -I$(CURDIR)/tests -I$(CURDIR)/3rdparty -I$(CURDIR)/sequences
INCLUDES += -I$(CURDIR)/3rdparty/cereal/include -I$(CURDIR)/3rdparty/gtest/include -I$(CURDIR)/3rdparty/minhook/include
INCLUDES += -I$(CURDIR)/3rdparty/d3dhook -I$(CURDIR)/3rdparty/framedisplay -I$(CURDIR)/3rdparty/imgui
CC_FLAGS = -m32 $(INCLUDES) $(DEFINES)

# Build type
BUILD_PREFIX = build_debug_$(shell git rev-parse --abbrev-ref HEAD)

all: logging

launcher: cccaster/launcher.exe
# debugger: tools/debugger.exe
# generator: tools/generator.exe
# palettes: palettes.exe


cccaster.v3.1.002.debug.zip: cccaster.v3.1.debug.exe cccaster/hook.debug.dll cccaster/launcher.exe cccaster/updater.exe
cccaster.v3.1.002.debug.zip: cccaster/unzip.exe cccaster/README.md cccaster/ChangeLog.txt cccaster/trials
	@echo
ifneq (,$(findstring release,$(MAKECMDGOALS)))
		rm -f $(wildcard cccaster*.zip)
		zip cccaster.v3.1.002.debug.zip $^
		zip cccaster.v3.1.002.debug.zip -j scripts/Add_Handler_Protocol.bat
		zip cccaster.v3.1.002.debug.zip -j relay_list.txt
		zip cccaster.v3.1.002.debug.zip -j lobby_list.txt
		cp -r res/GRP GRP
		zip cccaster.v3.1.002.debug.zip -r GRP
		zip cccaster.v3.1.002.debug.zip -r cccaster/trials
		rm -rf GRP
endif
	echo $(MAKECMDGOALS)

cccaster.v3.1.debug.exe: $(addprefix $(BUILD_PREFIX)/,$(MAIN_OBJECTS)) res/icon.res
	rm -f $(filter-out cccaster.v3.1.debug.exe,$(wildcard cccaster*.exe))
	i686-w64-mingw32-g++ -o $@ $(CC_FLAGS) -Wall -std=c++11 $^ -m32 -static -lws2_32 -lpsapi -lwinpthread -lwinmm -lole32 -ldinput -lwininet -ldwmapi -lgdi32
	@echo
	i686-w64-mingw32-strip $@
	chmod +x $@
	@echo

cccaster/hook.debug.dll: $(addprefix $(BUILD_PREFIX)/,$(DLL_OBJECTS)) res/rollback.o targets/CallDraw.s | cccaster
	i686-w64-mingw32-g++ -o $@ $(CC_FLAGS) -Wall -std=c++11 $^ -shared -m32 -static -lws2_32 -lpsapi -lwinpthread -lwinmm -lole32 -ldinput -lwininet -ldwmapi -lgdi32 -ld3dx9
	@echo
	i686-w64-mingw32-strip $@
	@echo

cccaster/launcher.exe: tools/Launcher.cpp | cccaster
	i686-w64-mingw32-g++ -o $@ $^ -m32 -s -Os -O2 -Wall -static -mwindows
	@echo
	i686-w64-mingw32-strip $@
	chmod +x $@
	@echo

cccaster/updater.exe: tools/Updater.cpp lib/StringUtils.cpp | cccaster
	i686-w64-mingw32-g++ -o $@ $^ -m32 -s -Os -O2 -std=c++11 -I$(CURDIR)/lib -Wall -static -lpsapi
	@echo
	i686-w64-mingw32-strip $@
	chmod +x $@
	@echo

cccaster/unzip.exe: 3rdparty/unzip.exe | cccaster
	cp -f $^ cccaster/

cccaster/trials: trials | cccaster
	cp -r $^ cccaster/

cccaster/README.md: README.md | cccaster
	cp -f $^ cccaster/

cccaster/ChangeLog.txt: ChangeLog.txt | cccaster
	cp -f $^ cccaster/

cccaster:
	mkdir -p $@

res/rollback.bin: tools/generator.exe
	wine tools/generator.exe $@
	@echo

res/rollback.o: res/rollback.bin
	objcopy -I binary -O elf32-i386 -B i386 $< $@
	@echo

res/icon.res: res/icon.rc res/icon.ico
	i686-w64-mingw32-windres -F pe-i386 res/icon.rc -O coff -o $@
	@echo


LOGGING_PREFIX = build_logging_$(shell git rev-parse --abbrev-ref HEAD)
DEBUGGER_LIB_OBJECTS = \
	$(addprefix $(LOGGING_PREFIX)/,$(filter-out lib/Version.o lib/LoggerLogVersion.o lib/ConsoleUi.o,$(LIB_OBJECTS)))

tools/debugger.exe: tools/Debugger.cpp $(DEBUGGER_LIB_OBJECTS)
	i686-w64-mingw32-g++ -o $@ $(CC_FLAGS) -s -Os -O2 -DLOGGING -Wall -std=c++11 $^ -m32 -static -lws2_32 -lpsapi -lwinpthread -lwinmm -lole32 -ldinput -lwininet -ldwmapi -lgdi32 \
	-I$(CURDIR)/3rdparty/distorm3/include -L$(CURDIR)/3rdparty/distorm3 -ldistorm3
	@echo
	i686-w64-mingw32-strip $@
	chmod +x $@
	@echo


GENERATOR_LIB_OBJECTS = \
	$(addprefix $(LOGGING_PREFIX)/,$(filter-out lib/Version.o lib/LoggerLogVersion.o lib/ConsoleUi.o,$(LIB_OBJECTS)))

tools/generator.exe: tools/Generator.cpp $(GENERATOR_LIB_OBJECTS)
	i686-w64-mingw32-g++ -o $@ $(CC_FLAGS) -s -Os -O2 -DLOGGING -Wall -std=c++11 $^ -m32 -static -lws2_32 -lpsapi -lwinpthread -lwinmm -lole32 -ldinput -lwininet -ldwmapi -lgdi32
	@echo
	i686-w64-mingw32-strip $@
	chmod +x $@
	@echo


PALETTES_SRC = tools/Palettes.cpp tools/PaletteEditor.cpp netplay/PaletteManager.cpp netplay/CharacterSelect.cpp
PALETTES_SRC += lib/StringUtils.cpp lib/KeyValueStore.cpp

FRAMEDISPLAY_SRC = $(wildcard 3rdparty/framedisplay/*.cc)
FRAMEDISPLAY_OBJECTS = $(FRAMEDISPLAY_SRC:.cc=.o)

FRAMEDISPLAY_INCLUDES = -I$(CURDIR) -I$(CURDIR)/netplay -I$(CURDIR)/lib -I$(CURDIR)/3rdparty/framedisplay
FRAMEDISPLAY_INCLUDES += -I$(CURDIR)/3rdparty/libpng -I$(CURDIR)/3rdparty/libz -I$(CURDIR)/3rdparty/glfw
FRAMEDISPLAY_INCLUDES += -I"$(CURDIR)/3rdparty/AntTweakBar/include" -I/usr/i686-w64-mingw32/include/GL

FRAMEDISPLAY_CC_FLAGS = -s -Os -Ofast -fno-rtti
FRAMEDISPLAY_CC_FLAGS += -DDISABLE_LOGGING -DDISABLE_SERIALIZATION -DPALETTES_FOLDER='"palettes\\"'

FRAMEDISPLAY_LD_FLAGS = -L$(CURDIR)/3rdparty/libpng -L$(CURDIR)/3rdparty/libz -L"$(CURDIR)/3rdparty/AntTweakBar/lib"
FRAMEDISPLAY_LD_FLAGS += -L$(CURDIR)/3rdparty/glfw
FRAMEDISPLAY_LD_FLAGS += -mwindows -static -lmingw32 -lpng -lz -lglfw -lopengl32 -lglu32

3rdparty/framedisplay/%.o: 3rdparty/framedisplay/%.cc
	i686-w64-mingw32-g++ $(FRAMEDISPLAY_CC_FLAGS) $(FRAMEDISPLAY_INCLUDES) -o $@ -c $<

3rdparty/AntTweakBar/lib/libAntTweakBar.a: $(wildcard 3rdparty/AntTweakBar/src/*.c* 3rdparty/AntTweakBar/src/*.h)
	$(MAKE) --directory=3rdparty/AntTweakBar/src

palettes.exe: $(PALETTES_SRC) $(FRAMEDISPLAY_OBJECTS) res/palettes.res 3rdparty/AntTweakBar/lib/libAntTweakBar.a
	i686-w64-mingw32-g++ $(FRAMEDISPLAY_CC_FLAGS) -o $@ $(FRAMEDISPLAY_INCLUDES) -Wall -std=c++11 -C $^ $(FRAMEDISPLAY_LD_FLAGS)
	@echo
	i686-w64-mingw32-strip $@
	chmod +x $@
	@echo

res/palettes.res: res/palettes.rc res/palettes.ico
	i686-w64-mingw32-windres -F pe-i386 res/palettes.rc -O coff -o $@
	@echo


define make_version
@scripts/make_version 3.1.002 > lib/Version.local.hpp
endef

define make_protocol
@scripts/make_protocol $(NON_GEN_HEADERS)
endef

define make_depend
@scripts/make_depend "i686-w64-mingw32-g++" "-m32 $(INCLUDES)"
endef


version:
	$(make_version)

proto:
	$(make_protocol)

reset-proto:
	rm -f lib/ProtocolEnums.hpp
	@$(MAKE) proto

depend: version proto
	$(make_depend)

.depend_$(shell git rev-parse --abbrev-ref HEAD): $(NON_GEN_SRCS) $(NON_GEN_HEADERS)
	$(make_version)
	$(make_protocol)
	$(make_depend)


clean-proto:
	git checkout -- lib/ProtocolEnums.hpp
	rm -f $(AUTOGEN_HEADERS)

clean-res:
	rm -f res/rollback.* res/icon.res
	rm -rf GRP

clean-lib:
	$(MAKE) --directory=3rdparty/AntTweakBar/src clean
	rm -f 3rdparty/framedisplay/*.o

clean-common: clean-proto clean-res clean-lib
	rm -rf tmp*
	rm -rf cccaster/trials
	rm -f .depend_$(shell git rev-parse --abbrev-ref HEAD) .include_$(shell git rev-parse --abbrev-ref HEAD) *.exe *.zip tools/*.exe \
$(filter-out cccaster/debugconfig.ini $(wildcard cccaster/*.mappings cccaster/*.log),$(wildcard cccaster/*))

clean-debug: clean-common
	rm -rf build_debug_$(shell git rev-parse --abbrev-ref HEAD)

clean-logging: clean-common
	rm -rf build_logging_$(shell git rev-parse --abbrev-ref HEAD)

clean-release: clean-common
	rm -rf build_release_$(shell git rev-parse --abbrev-ref HEAD)

clean: clean-debug clean-logging clean-release

clean-all: clean-debug clean-logging clean-release
	rm -rf .include* .depend* build*


check:
	cppcheck --enable=all $(NON_GEN_SRCS) $(NON_GEN_HEADERS)

trim:
	sed --binary --in-place 's/\\r$$//' $(NON_GEN_SRCS) $(NON_GEN_HEADERS)
	sed --in-place 's/[[:space:]]\\+$$//' $(NON_GEN_SRCS) $(NON_GEN_HEADERS)

format:
	3rdparty/astyle                   	\
    --indent=spaces=4           	\
    --convert-tabs              	\
    --indent-preprocessor       	\
    --indent-switches           	\
    --style=allman              	\
    --max-code-length=120       	\
    --pad-paren                 	\
    --pad-oper                  	\
    --suffix=none               	\
    --formatted                 	\
    --keep-one-line-blocks      	\
    --align-pointer=name        	\
    --align-reference=type      	\
$(filter-out tools/Generator.cpp netplay/CharacterSelect.cpp lib/KeyboardVKeyNames.hpp targets/DllAsmHacks.hpp,\
$(NON_GEN_SRCS) $(NON_GEN_HEADERS))

count:
	@wc -l $(NON_GEN_SRCS) $(NON_GEN_HEADERS) | sort -nr | head -n 10 && echo '    ...'


ifeq (,$(findstring version,$(MAKECMDGOALS)))
ifeq (,$(findstring proto,$(MAKECMDGOALS)))
ifeq (,$(findstring depend,$(MAKECMDGOALS)))
ifeq (,$(findstring clean,$(MAKECMDGOALS)))
ifeq (,$(findstring check,$(MAKECMDGOALS)))
ifeq (,$(findstring trim,$(MAKECMDGOALS)))
ifeq (,$(findstring format,$(MAKECMDGOALS)))
ifeq (,$(findstring count,$(MAKECMDGOALS)))
ifeq (,$(findstring install,$(MAKECMDGOALS)))
ifeq (,$(findstring palettes,$(MAKECMDGOALS)))
-include .depend_$(shell git rev-parse --abbrev-ref HEAD)
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif


pre-build:
	$(make_version)
	$(make_protocol)
	@echo
	@echo ========== Main-build ==========
	@echo

post-build: main-build
	@echo
	@echo ========== Post-build ==========
	@echo


debug: post-build
logging: post-build
release: post-build
profile: post-build

target-debug: cccaster.v3.1.002.debug.zip
target-logging: cccaster.v3.1.002.debug.zip
target-release: cccaster.v3.1.002.debug.zip


ifneq (,$(findstring logging,$(MAKECMDGOALS)))
main-build: pre-build
	@$(MAKE) --no-print-directory target-logging BUILD_TYPE=build_logging
else
ifneq (,$(findstring release,$(MAKECMDGOALS)))
main-build: pre-build
	@$(MAKE) --no-print-directory target-release BUILD_TYPE=build_release
else
ifneq (,$(findstring profile,$(MAKECMDGOALS)))
main-build: pre-build
	@$(MAKE) --no-print-directory target-profile BUILD_TYPE=build_debug STRIP=touch
else
ifeq (logging,logging)
main-build: pre-build
	@$(MAKE) --no-print-directory target-logging BUILD_TYPE=build_logging
else
main-build: pre-build
	@$(MAKE) --no-print-directory target-debug BUILD_TYPE=build_debug STRIP=touch
endif
endif
endif
endif


build_debug_$(shell git rev-parse --abbrev-ref HEAD):
	rsync -a -f"- .git/" -f"- build_*/" -f"+ */" -f"- *" --exclude=".*" . $@

build_debug_$(shell git rev-parse --abbrev-ref HEAD)/%.o: %.cpp | build_debug_$(shell git rev-parse --abbrev-ref HEAD)
	i686-w64-mingw32-g++ $(CC_FLAGS) -ggdb3 -O0 -fno-inline -D_GLIBCXX_DEBUG -DDEBUG -Wall -Wempty-body -std=c++11 -o $@ -c $<

build_debug_$(shell git rev-parse --abbrev-ref HEAD)/%.o: %.cc | build_debug_$(shell git rev-parse --abbrev-ref HEAD)
	i686-w64-mingw32-g++ $(CC_FLAGS) -ggdb3 -O0 -fno-inline -D_GLIBCXX_DEBUG -DDEBUG -o $@ -c $<

build_debug_$(shell git rev-parse --abbrev-ref HEAD)/%.o: %.c | build_debug_$(shell git rev-parse --abbrev-ref HEAD)
	i686-w64-mingw32-gcc $(filter-out -fno-rtti,$(CC_FLAGS) -ggdb3 -O0 -fno-inline -D_GLIBCXX_DEBUG -DDEBUG) -Wno-attributes -o $@ -c $<


build_logging_$(shell git rev-parse --abbrev-ref HEAD):
	rsync -a -f"- .git/" -f"- build_*/" -f"+ */" -f"- *" --exclude=".*" . $@

build_logging_$(shell git rev-parse --abbrev-ref HEAD)/%.o: %.cpp | build_logging_$(shell git rev-parse --abbrev-ref HEAD)
	i686-w64-mingw32-g++ $(CC_FLAGS) -s -Os -O2 -DLOGGING -Wall -Wempty-body -std=c++11 -o $@ -c $<

build_logging_$(shell git rev-parse --abbrev-ref HEAD)/%.o: %.cc | build_logging_$(shell git rev-parse --abbrev-ref HEAD)
	i686-w64-mingw32-g++ $(CC_FLAGS) -s -Os -O2 -DLOGGING -o $@ -c $<

build_logging_$(shell git rev-parse --abbrev-ref HEAD)/%.o: %.c | build_logging_$(shell git rev-parse --abbrev-ref HEAD)
	i686-w64-mingw32-gcc $(filter-out -fno-rtti,$(CC_FLAGS) -s -Os -O2 -DLOGGING) -Wno-attributes -o $@ -c $<


build_release_$(shell git rev-parse --abbrev-ref HEAD):
	rsync -a -f"- .git/" -f"- build_*/" -f"+ */" -f"- *" --exclude=".*" . $@

build_release_$(shell git rev-parse --abbrev-ref HEAD)/%.o: %.cpp | build_release_$(shell git rev-parse --abbrev-ref HEAD)
	i686-w64-mingw32-g++ $(CC_FLAGS) -s -Os -Ofast -fno-rtti -DNDEBUG -DRELEASE -DDISABLE_LOGGING -DDISABLE_ASSERTS -std=c++11 -o $@ -c $<

build_release_$(shell git rev-parse --abbrev-ref HEAD)/%.o: %.cc | build_release_$(shell git rev-parse --abbrev-ref HEAD)
	i686-w64-mingw32-g++ $(CC_FLAGS) -s -Os -Ofast -fno-rtti -DNDEBUG -DRELEASE -DDISABLE_LOGGING -DDISABLE_ASSERTS -o $@ -c $<

build_release_$(shell git rev-parse --abbrev-ref HEAD)/%.o: %.c | build_release_$(shell git rev-parse --abbrev-ref HEAD)
	i686-w64-mingw32-gcc $(filter-out -fno-rtti,$(CC_FLAGS) -s -Os -Ofast -fno-rtti -DNDEBUG -DRELEASE -DDISABLE_LOGGING -DDISABLE_ASSERTS) -Wno-attributes -o $@ -c $<
